<?php
/**
 * @file
 * Code for the Core feature.
 */

include_once 'kcore.features.inc';

/**
 * Implements hook_menu_alter().
 * Thanks to pfournier, creator of module Empty Front Page (https://www.drupal.org/project/empty_front_page)
 */
function kcore_menu_alter(&$items) {
	$items['node']['page callback'] = 'empty_front_page_callback';
}

function empty_front_page_callback() {
	drupal_set_title('');
	return array();
}

function kcore_block_view_alter(&$data, $block) {
  if ($block->delta == 'menu-menu-park' || $block->delta == 'menu-national-parks' || $block->delta == 'pnf_park_menu_clone') {
	// Changes menu block name, based on http host.
	$park_names = array(
	  'calanques-parcnational' => 'Le Parc national des Calanques',
	  'cevennes-parcnational' => 'Le Parc national des Cévennes',
	  'ecrins-parcnational' => 'Le Parc national des Ecrins',
	  'guadeloupe-parcnational' => 'Le Parc national de la Guadeloupe',
	  'mercantour' => 'Le Parc national du Mercantour',
	  'parc-amazonien-guyane' => 'Le Parc amazonien de Guyane',
	  'parc-pyrenees' => 'Le Parc national des Pyrénées',
	  'parcsnationaux' => 'Le portail des Parcs',
	  'portcrosparcnational' => 'Le Parc national de Port-Cros',
	  'reunion-parcnational' => 'Le Parc national de La Réunion',
	  'vanoise-parcnational' => 'Le Parc national de la Vanoise',
	);

	$host_parts = explode('.', $_SERVER['HTTP_HOST']);

	// Config for staging site >> http://pnXX.pnfdev.xyz/
	if ($host_parts[2] == 'xyz' ) {
		$park_names = array(
		  'pnca' => 'Le Parc national des Calanques',
		  'pnce' => 'Le Parc national des Cévennes',
		  'pnec' => 'Le Parc national des Ecrins',
		  'pngu' => 'Le Parc national de la Guadeloupe',
		  'pnme' => 'Le Parc national du Mercantour',
		  'pnag' => 'Le Parc amazonien de Guyane',
		  'pnpy' => 'Le Parc national des Pyrénées',
		  'pnf' => 'Le portail des Parcs',
		  'pnpc' => 'Le Parc national de Port-Cros',
		  'pnre' => 'Le Parc national de La Réunion',
		  'pnva' => 'Le Parc national de la Vanoise',
		);
		
		$current_park_name = $park_names[$host_parts[0]];

	} else {
		$current_park_name = $park_names[$host_parts[1]];
	}

	switch($block->delta) {
	  case 'menu-menu-park':
		$select = array();
		foreach (element_children($data['content']) as $key) {
		  $select[$data['content'][$key]['#href']] = $data['content'][$key]['#title'];
		}
		$options = array('choose' => $current_park_name);
		ctools_include('jump-menu');
		$form = ctools_jump_menu(array(), $form_state, $select, $options);
		$data['content'] = $form;
		$data['subject'] = '';
		break;

	  case 'menu-national-parks':
		$select = array();
		foreach (element_children($data['content']) as $key) {
		  $url_parts = explode('.', $data['content'][$key]['#href']);
		  if ($url_parts[1] != $host_parts[1]) {
			$select[$data['content'][$key]['#href']] = $data['content'][$key]['#title'];
		  }
		}
		$options = array('choose' => $data['subject']);
		ctools_include('jump-menu');
		$form = ctools_jump_menu(array(), $form_state, $select, $options);
		$data['content'] = $form;
		$data['subject'] = '';
		break;

	  case 'pnf_park_menu_clone':
		$data['subject'] = $current_park_name;
		break;
	}


  }
}

/**
 * Implements hook_block_info().
 */
function kcore_block_info() {
  $blocks = array();
  // Cloning of "Menu du parc" block.
  $blocks['pnf_park_menu_clone'] = array(
	'info' => t('PNF : Clone du bloc de menu "Menu du parc"'),
	'cache' => DRUPAL_NO_CACHE,
  );

  // Cloning of "Suivez-nous" block.
  $blocks['pnf_on_the_web_clone'] = array(
	'info' => t('PNF : Clone du bloc "Suivez-nous"'),
	'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function kcore_block_view($delta = '') {
  switch ($delta) {
	case 'pnf_park_menu_clone':
	  $block['subject'] = '';

	  // Retrieve "Menu du parc" block content
	  $park_menu_block = module_invoke('menu', 'block_view', 'menu-menu-park');
	  $block['content'] = $park_menu_block['content'];
	  return $block;
	  break;

	case 'pnf_on_the_web_clone':
	  $block['subject'] = '';

	  // Retrieve "Menu du parc" block content
	  $on_the_web_block = module_invoke('on_the_web', 'block_view', '0');
	  $block['content'] = $on_the_web_block['content'];
	  return $block;
	  break;
  }
}

